@model SaFarHub.Models.User

@{
    ViewBag.Title = "All Users";
    Layout = null;

    string myself = (string)Session["username"];
}

<head>

    <!--Link for online bootstrap-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <!--Link for Icons-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

</head>

<style>
    body {
        font-family: "Arial", sans-serif;
        background-image: url('/Images/back12.jpg');
        background-size: cover;
        background-repeat: no-repeat;
    }

    .scrollbox {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 10px;
    }

    .profile-card {
        width: 50%; /* Display two users per row on big screens */
        padding: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        animation: slide-in 0.5s ease-out;
        color: white;
    }

    .profile-button {
        border: none;
        background: none;
        padding: 0;
        margin: 0;
        cursor: pointer;
        animation: fade-in 0.5s ease-out;
    }

    .add-button,
    .cancel-button {
        /*display: inline-block;*/
        padding: 10px 20px;
        background-color: #ff0000;
        color: #ffffff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .add-button:hover,
        .cancel-button:hover {
            background-color: #cc0000;
        }

    .button-text {
        font-weight: bold;
    }

    .profile-picture {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        object-fit: cover;
    }


    .delete-button {
        /*display: inline-block;*/
        padding: 10px 20px;
        background-color: #ff0000;
        color: #ffffff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .delete-button:hover {
            background-color: #cc0000;
        }

    @@media (max-width: 767px) {
        .profile-card {
            width: 100%; /* Display one user per row on mobile screens */
        }
    }

    @@keyframes slide-in {
        0% {
            opacity: 0;
            transform: translateY(-20px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fade-in {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    form {
        margin-block-end: 0;
    }

    .h2Tag {
        color: #fff;
        text-align: center;
    }
</style>




@if (ViewBag.friends != null)
{
    <div class="h2Tag">
        <h2 style="margin:0;">My Friends</h2>
    </div>
    <hr style="height:3px; background-color:snow;" />

    <div class="container div-container" style="margin-top: 20px;">
        @foreach (var item in ViewBag.friends)
        {
            if (item != null)
            {
                SaFarHub.Models.User currentFriend = item;
                <div class="row">
                    <div class="col-3" style="text-align: center;">
                        @if (!string.IsNullOrEmpty(currentFriend.profilePicture))
                        {
                            <form method="post" action="@Url.Action("Profile", "UsersFriend")">
                                <input type="hidden" name="username" value="@currentFriend.username " />
                                <button type="submit" class="profile-button">
                                    <img src="@Url.Content(currentFriend.profilePicture)" class="profile-picture" />
                                </button>
                            </form>
                        }
                    </div>
                    <div class="col-6">
                        <form method="post" action="@Url.Action("Profile", "UsersFriend")">
                            <input type="hidden" name="username" value="@currentFriend.username" />
                            <button type="submit" class="profile-button">
                                <h3 style="color:snow;"><b>@currentFriend.firstName @currentFriend.lastName</b></h3>
                            </button>
                        </form>
                    </div>
                    <div class="col-3" style="text-align: center;">
                        <form method="post" action="/UsersFriend/UnFriendUser">
                            <input type="hidden" name="username" value="@currentFriend.username" />
                            <button type="submit" class="delete-button">
                                <span class="button-text">Remove Friend</span>
                            </button>
                        </form>
                    </div>
                </div>
                <hr style="height:3px; background-color:snow;" />
            }
        }
    </div>
    <hr style="height: 12px; background-color:snow;" />
}


<!--<div class="scrollbox">-->
@if (ViewBag.allUsers != null)
{
    <div class="h2Tag">
        <h2 style="margin:0;">Other Users</h2>
    </div>
    <hr style="height:3px; background-color:snow;" />

    <div class="container div-container" style="margin-top: 20px;">
        @foreach (var item in ViewBag.allUsers)
        {
            SaFarHub.Models.User currentFriend = item;
            bool isFriend = false;
            if (currentFriend != null)
            {
                if (ViewBag.friends != null)
                {
                    foreach (var friend in ViewBag.friends)
                    {

                        if (friend != null)
                        {
                            SaFarHub.Models.User user = friend;

                            if (user.username == currentFriend.username)
                            {
                                isFriend = true;
                                break;
                            }
                        }
                    }
                }
                if (!isFriend)
                {
                    if (currentFriend.username != myself)
                    {
                        <!--<div class="profile-card">-->
                        <div class="row">
                            <div class="col-3" style="text-align: center;">
                                @if (!string.IsNullOrEmpty(currentFriend.profilePicture))
                                {
                                    <form method="post" action="@Url.Action("OtherUsersProfile", "User")">
                                        <input type="hidden" name="username" value="@currentFriend.username" />
                                        <button type="submit" class="profile-button">
                                            <img src="@Url.Content(currentFriend.profilePicture)" class="profile-picture" />
                                        </button>
                                    </form>
                                }
                            </div>
                            <div class="col-6">
                                <form method="post" action="@Url.Action("OtherUsersProfile", "User")">
                                    <input type="hidden" name="username" value="@currentFriend.username" />
                                    <button type="submit" class="profile-button">
                                        <h3 style="color:snow;"><b>@currentFriend.firstName @currentFriend.lastName</b></h3>
                                    </button>
                                </form>
                            </div>
                            <div class="col-3" style="text-align: center;">
                                <form method="post" action="/User/AddFriend">
                                    <input type="hidden" name="username" value="@currentFriend.username" />
                                    <button type="submit" class="add-button">
                                        <span class="button-text">Add Friend</span>
                                    </button>
                                </form>
                            </div>
                        </div>
                        <hr style="height:3px; background-color:snow;" />
                        <!--</div>-->
                    }

                }
            }
        }
    </div>
}
<!--</div>-->




@if (ViewBag.allUsers == null && ViewBag.friends == null)
{
    <div style="text-align:center; align-content:center; color:snow;">
        <p>No user found!</p>
    </div>
}

<script>
    // Add event listeners or custom JavaScript code here

    const addButtonClicked = async (button) => {
        const confirmAdd = confirm("Are you sure you want to add this friend?");
        if (confirmAdd) {
            const form = button.closest("form");
            const formData = new FormData(form);
            const url = form.getAttribute("action");
            const newAction = button.getAttribute("data-action");

            try {
                const response = await fetch(url, {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const buttonText = button.querySelector(".button-text");
                    buttonText.textContent = "Cancel Request";
                    button.classList.remove("add-button");
                    button.classList.add("cancel-button");
                    form.setAttribute("action", newAction);

                    // Change event listener to cancelButtonClicked
                    button.removeEventListener("click", addButtonClicked);
                    button.addEventListener("click", cancelButtonClicked);
                } else {
                    console.error('Request failed with status', response.status);
                }
            } catch (error) {
                console.error('Request failed with error', error);
            }
        }
    };

    const cancelButtonClicked = async (button) => {
        const confirmCancel = confirm("Are you sure you want to cancel the friend request?");
        if (confirmCancel) {
            const form = button.closest("form");
            const formData = new FormData(form);
            const url = form.getAttribute("action");
            const newAction = button.getAttribute("data-action");

            try {
                const response = await fetch(url, {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const buttonText = button.querySelector(".button-text");
                    buttonText.textContent = "Add Friend";
                    button.classList.remove("cancel-button");
                    button.classList.add("add-button");
                    form.setAttribute("action", newAction);

                    // Change event listener to addButtonClicked
                    button.removeEventListener("click", cancelButtonClicked);
                    button.addEventListener("click", addButtonClicked);
                } else {
                    console.error('Request failed with status', response.status);
                }
            } catch (error) {
                console.error('Request failed with error', error);
            }
        }
    };


    const addButtons = document.querySelectorAll(".add-button");
    addButtons.forEach(button => {
        button.addEventListener("click", e => {
            e.preventDefault();
            addButtonClicked(button);
        });
    });

    const cancelButtons = document.querySelectorAll(".cancel-button");
    cancelButtons.forEach(button => {
        button.addEventListener("click", e => {
            e.preventDefault();
            cancelButtonClicked(button);
        });
    });


    // Add event listeners or custom JavaScript code here

    // Example: Add a confirmation dialog for the delete button
    const deleteButtons = document.querySelectorAll(".delete-button");
    deleteButtons.forEach(button => {
        button.addEventListener("click", e => {
            e.preventDefault();
            const confirmDelete = confirm("Are you sure you want to delete this friend?");
            if (confirmDelete) {
                // Submit the form
                button.closest("form").submit();
            }
        });
    });
</script>

